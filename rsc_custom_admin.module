<?php


/**
 * Implements hook_perm().
 */
function rsc_custom_admin_permission() {
  $permissions = array();

  //admin
  $permissions['administer rsc_custom_admin'] = array(
    'title' => t('Use RSC custom administration module')
  );

  return $permissions;
}


/**
 * Implements hook_menu().
 */
function rsc_custom_admin_menu() {
  
  //administrative menu
  $items['admin/config/development/rsc-custom'] = array(
    'title'            => 'RSC custom administration module',
    'description'      => t("Custom administration, hacks and settings for RSC's websites."),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('rsc_custom_admin_settings'),
    'access arguments' => array('administer rsc_custom_admin'),
    'weight'           => 30,
    'file'             => 'rsc_custom_admin.admin.inc'
  );

  $items['rsc_testpage'] = array(
    'title'            => 'RSC Test Page',
    'page callback'    => 'rsc_custom_admin_testpage',
    'page arguments'   => array(''),
    'access arguments' => array('administer rsc_custom_admin')
  );

  return $items;
}


/**
 * Implements hook_menu_alter().
 */
function rsc_custom_admin_menu_alter(&$items) {
  
  // disable some unwanted page callbacks:
  $items['node']['page callback'] = 'drupal_not_found';
  
}


/**
 * Implements hook_form_FORM_ID_alter
 * Populate search form on search results page
 */
function rsc_custom_admin_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $a0 = arg(0);
  $a2 = arg(2);
  if($a0 == 'search' && $a2){
    $form['search_block_form']['#default_value'] = $a2;
  }
}


/**
 * Implements hook_menu_breadcrumb_alter(&$active_trail, $item)
 */
function rsc_custom_admin_menu_breadcrumb_alter(&$active_trail, $item) {
  // If the breadcrumbs were not set by rsc_library, remove them! (except on admin pages)
  if (!path_is_admin(current_path()) && empty($GLOBALS['rsc_library']['breadcrumb_set'])) {
    $active_trail = array();
  }
}


/**
 * Implements hook_html_head_alter().
 * 
 * Enable the use of Google Apps on the site by adding something like this to the header:
 * <meta name="google-site-verification" content="9IjCIyPLJJ52UIDC00-aG-CiLfQGT4YuJD3XghhSTYY" />
 */
function rsc_custom_admin_html_head_alter(&$head_elements) {
  $head_elements['rsc_custom_admin_google_site_verification'] = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'google-site-verification',
      'content' => '9IjCIyPLJJ52UIDC00-aG-CiLfQGT4YuJD3XghhSTYY'
    ),
  );
}


/**
 * Callback to run development scripts
 */
function rsc_custom_admin_testpage() {
  echo 'testpage';
}


/**
 * Implements hook_node_update_index().
 * 
 * Adds the content of pdf attachments to the search index
 * TODO: test whether the index is an accurate representation of the pdf contents
 * If not, maybe replace this with Tika and https://drupal.org/project/apachesolr_attachments
 */
function rsc_custom_admin_node_update_index($node) { // return Array of additional information to be indexed.
  // index the content of pdfs attached to 'field_attachment' of 'library_article's
  if ($node->type=='library_article') {
    // TODO: only do this for files with .pdf extention of pdf mime-type (probably easier to check extention)
    require_once('class.pdf2text.php');
    $a = new PDF2Text();
    $attachment = reset($node->field_attachment);
    // TODO: use field_get_items
    $uri = $attachment[0]['uri']; // This will only use the first language; will not work for multiple language sites
    $target = file_create_url($uri);
    $a->setFilename($target);
    $a->decodePDF();
    return $a->output();
  }
  return null;
}


/**
 * Implements hook_page_alter(&$page).
 * https://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_page_alter/7
 */
function rsc_custom_admin_page_alter(&$page) {

  // fix the weight of the sections menu relative to the cached categories menu
  if (!empty($page['sidebar_first']['menu_menu-sections-1'])) {
    $page['sidebar_first']['menu_menu-sections-1']['#weight'] = -1;
    $page['sidebar_first']['#sorted'] = FALSE; // indicate that is still needs to be sorted before rendering
  }

  // alter the search page
  if (arg(0) == 'search') {
    if (arg(2)) {
      drupal_set_title(t("Search results"));
    } else {
      drupal_set_title(t("Search"));
    }
    // FIXME: apachesolr still sets the title in <head> to "Search for content ..."
  }
  
}


/**
 * Checked, chainable array_shift
 */
function rsc_shift(&$arr) {
  return (is_array($arr)) ? array_shift($arr) : NULL;
}

